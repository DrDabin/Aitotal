//---------------------------------------------------------------------------
#include <vcl.h>
#include <memory>    //std::auto_prt<>
#pragma hdrstop

#include "MyInclude/MyStruct.h"
#include "BaseParser.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
void BaseClass::AddBase(MyBase StrokaBase)
{
   SpisokBase->Add("<MynameFile>" + StrokaBase.BaseFileName +"</MynameFile>"+
				   "<MyPathFileName>" + StrokaBase.BasePatchFileName + "</MyPathFileName>"+
				   "<MyMD5>" + StrokaBase.BaseMD5 + "</MyMD5>"+
				   "<MySHA256>" + StrokaBase.BaseSHA256 + "</MySHA256>" +
				   "<MySizeFile>" + StrokaBase.BaseSizeFile + "</MySizeFile>" +
					"<MyDate>" + StrokaBase.BaseDataProverki +"</MyDate>" +
				   "<MyDetect>" + StrokaBase.BaseDetect + "</MyDetect>" +
				   "<MyAdress>" + StrokaBase.BaseAdress +"</MyAdress>" +
				   "<MyPatchFileArchiv>"+StrokaBase.BasePatchFileArchiv+"<MyPatchFileAchiv>"+
				   "<MYJesson>" + StrokaBase.BaseJesson+ "</MyJesson>"
   );
}
void BaseClass::SaveToLog(UnicodeString StrokaSave)
{
   SpisokBase->SaveToFile(StrokaSave);
}
BaseClass::BaseClass()
{
   SpisokBase =	new TStringList(NULL);
}

BaseClass::~BaseClass()
{
	SpisokBase->Clear();
	delete SpisokBase;
}


