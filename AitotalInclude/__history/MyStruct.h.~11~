#ifndef MyStructH
#define MyStructH
#include <vector>
struct Base{
   UnicodeString BaseFileName;
   UnicodeString BasePatchFileName;
   UnicodeString BaseMD5;
   UnicodeString BaseSHA256;
   UnicodeString BaseSizeFile;
   UnicodeString BaseDataProverki;
   UnicodeString BaseDetect;
   UnicodeString BaseAdress;
   UnicodeString BasePatchFileArchiv;
   UnicodeString BaseJesson;
   UnicodeString BasePredScanData;
};
struct Proxy{
       bool ProxiChecked;// true читаем\записываем настройки прокси.
	   int IpPort;
	   int Socket;
	   UnicodeString Proxy;
	   UnicodeString OptProxiLogin;
	   UnicodeString OptProxiPassword;
	};

struct Options {
	Proxy ProxyVT;
	int FileCount;
	int Thread;
	bool Exit_Trei;//если труе мы закрываем программы, елзе - сворачиваем в трей
	bool ErrorArchiv;// Определяем выводить уведомление при ошибки распаковки архивов.
	std::vector<AnsiString> Apikey; // мы создали пустой вектор типа int
	//AnsiString apikey;
};

class CTest
{
   public:
	  void __fastcall Ctest(int number, UnicodeString jseson);
	  int numberFile;
	  UnicodeString jessonFile;
};

 void __fastcall CTest::Ctest(int number, UnicodeString jseson)
 {
	numberFile = number;
	jessonFile = jseson;
 }

#endif